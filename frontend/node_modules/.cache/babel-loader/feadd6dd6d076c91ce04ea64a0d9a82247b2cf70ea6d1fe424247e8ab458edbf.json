{"ast":null,"code":"import{useEffect}from\"react\";function usePopupClose(isOpen,closeAllPopups){useEffect(()=>{if(!isOpen)return;// останавливаем действие эффекта, если попап закрыт\nconst handleOverlay=event=>{// если есть `popup_opened` в классах блока, значит, кликнули на оверлей\nif(event.target.classList.contains(\"popup_opened\")){closeAllPopups();}};const handleEscape=e=>{if(e.key===\"Escape\"){closeAllPopups();}};document.addEventListener(\"keydown\",handleEscape);document.addEventListener(\"mousedown\",handleOverlay);//  обязательно удаляем обработчики в `clean-up`- функции\nreturn()=>{document.removeEventListener(\"keydown\",handleEscape);document.removeEventListener(\"mousedown\",handleOverlay);};// обязательно следим за `isOpen`, чтобы срабатывало только при открытии, а не при любой перерисовке компонента\n},[isOpen]);}export default usePopupClose;","map":{"version":3,"names":["useEffect","usePopupClose","isOpen","closeAllPopups","handleOverlay","event","target","classList","contains","handleEscape","e","key","document","addEventListener","removeEventListener"],"sources":["C:/Users/enver/Desktop/react-mest/frontend/src/hooks/usePopupClose.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nfunction usePopupClose(isOpen, closeAllPopups) {\n  useEffect(() => {\n    if (!isOpen) return; // останавливаем действие эффекта, если попап закрыт\n\n    const handleOverlay = (event) => {\n      // если есть `popup_opened` в классах блока, значит, кликнули на оверлей\n      if (event.target.classList.contains(\"popup_opened\")) {\n        closeAllPopups();\n      }\n    };\n\n    const handleEscape = (e) => {\n      if (e.key === \"Escape\") {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleEscape);\n    document.addEventListener(\"mousedown\", handleOverlay);\n\n    //  обязательно удаляем обработчики в `clean-up`- функции\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscape);\n      document.removeEventListener(\"mousedown\", handleOverlay);\n    };\n    // обязательно следим за `isOpen`, чтобы срабатывало только при открытии, а не при любой перерисовке компонента\n  }, [isOpen]);\n}\n\nexport default usePopupClose;\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CAEjC,QAAS,CAAAC,aAAaA,CAACC,MAAM,CAAEC,cAAc,CAAE,CAC7CH,SAAS,CAAC,IAAM,CACd,GAAI,CAACE,MAAM,CAAE,OAAQ;AAErB,KAAM,CAAAE,aAAa,CAAIC,KAAK,EAAK,CAC/B;AACA,GAAIA,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC,cAAc,CAAC,CAAE,CACnDL,cAAc,CAAC,CAAC,CAClB,CACF,CAAC,CAED,KAAM,CAAAM,YAAY,CAAIC,CAAC,EAAK,CAC1B,GAAIA,CAAC,CAACC,GAAG,GAAK,QAAQ,CAAE,CACtBR,cAAc,CAAC,CAAC,CAClB,CACF,CAAC,CAEDS,QAAQ,CAACC,gBAAgB,CAAC,SAAS,CAAEJ,YAAY,CAAC,CAClDG,QAAQ,CAACC,gBAAgB,CAAC,WAAW,CAAET,aAAa,CAAC,CAErD;AACA,MAAO,IAAM,CACXQ,QAAQ,CAACE,mBAAmB,CAAC,SAAS,CAAEL,YAAY,CAAC,CACrDG,QAAQ,CAACE,mBAAmB,CAAC,WAAW,CAAEV,aAAa,CAAC,CAC1D,CAAC,CACD;AACF,CAAC,CAAE,CAACF,MAAM,CAAC,CAAC,CACd,CAEA,cAAe,CAAAD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}
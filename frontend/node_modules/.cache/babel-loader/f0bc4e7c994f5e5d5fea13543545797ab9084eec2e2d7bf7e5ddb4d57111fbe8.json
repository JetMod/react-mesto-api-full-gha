{"ast":null,"code":"//const baseUrl = 'http://localhost:3000';\nconst baseUrl='https://api.zhukirina.nomoredomainsmonster.ru';function sendRequestData(url,options){return fetch(url,options).then(res=>{if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}export function register(email,password){return sendRequestData(\"\".concat(baseUrl,\"/signup\"),{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})});}export function authorize(email,password){return sendRequestData(\"\".concat(baseUrl,\"/signin\"),{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})});}export function checkToken(token){return sendRequestData(\"\".concat(baseUrl,\"/users/me\"),{method:'GET',headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}});}","map":{"version":3,"names":["baseUrl","sendRequestData","url","options","fetch","then","res","ok","json","Promise","reject","concat","status","register","email","password","method","headers","body","JSON","stringify","authorize","checkToken","token"],"sources":["C:/Users/enver/Desktop/react-mest/frontend/src/utils/auth.js"],"sourcesContent":["//const baseUrl = 'http://localhost:3000';\nconst baseUrl = 'https://api.zhukirina.nomoredomainsmonster.ru';\n\nfunction sendRequestData(url, options) {\n  return fetch(url, options)\n  .then((res) => {\n    if(res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  })\n}\n\nexport function register(email, password) {\n  return sendRequestData(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\"Content-Type\": \"application/json\"},\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    })\n  })\n}\n\nexport function authorize(email, password) {\n  return sendRequestData(`${baseUrl}/signin`, {\n    method: 'POST',\n    headers: {\"Content-Type\": \"application/json\"},\n    body: JSON.stringify({\n      password: password,\n      email: email,\n    })\n  })\n}\n\nexport function checkToken(token) {\n  return sendRequestData(`${baseUrl}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\" : `Bearer ${token}`\n    }\n  })\n}\n"],"mappings":"AAAA;AACA,KAAM,CAAAA,OAAO,CAAG,+CAA+C,CAE/D,QAAS,CAAAC,eAAeA,CAACC,GAAG,CAAEC,OAAO,CAAE,CACrC,MAAO,CAAAC,KAAK,CAACF,GAAG,CAAEC,OAAO,CAAC,CACzBE,IAAI,CAAEC,GAAG,EAAK,CACb,GAAGA,GAAG,CAACC,EAAE,CAAE,CACT,MAAO,CAAAD,GAAG,CAACE,IAAI,CAAC,CAAC,CACnB,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,0CAAAC,MAAA,CAAYL,GAAG,CAACM,MAAM,CAAE,CAAC,CAChD,CAAC,CAAC,CACJ,CAEA,MAAO,SAAS,CAAAC,QAAQA,CAACC,KAAK,CAAEC,QAAQ,CAAE,CACxC,MAAO,CAAAd,eAAe,IAAAU,MAAA,CAAIX,OAAO,YAAW,CAC1CgB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAC,cAAc,CAAE,kBAAkB,CAAC,CAC7CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBL,QAAQ,CAAEA,QAAQ,CAClBD,KAAK,CAAEA,KACT,CAAC,CACH,CAAC,CAAC,CACJ,CAEA,MAAO,SAAS,CAAAO,SAASA,CAACP,KAAK,CAAEC,QAAQ,CAAE,CACzC,MAAO,CAAAd,eAAe,IAAAU,MAAA,CAAIX,OAAO,YAAW,CAC1CgB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAC,cAAc,CAAE,kBAAkB,CAAC,CAC7CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBL,QAAQ,CAAEA,QAAQ,CAClBD,KAAK,CAAEA,KACT,CAAC,CACH,CAAC,CAAC,CACJ,CAEA,MAAO,SAAS,CAAAQ,UAAUA,CAACC,KAAK,CAAE,CAChC,MAAO,CAAAtB,eAAe,IAAAU,MAAA,CAAIX,OAAO,cAAa,CAC5CgB,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,WAAAN,MAAA,CAAaY,KAAK,CACnC,CACF,CAAC,CAAC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}